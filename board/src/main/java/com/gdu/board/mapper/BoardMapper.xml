<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdu.board.mapper.BoardMapper">

	<!-- [삭제] Board -->
	<delete id="deleteBoard" >
		DELETE 
		FROM board
		WHERE board_no = #{boardNo}
	</delete>

	<!-- Board -->
	<insert id="insertBoard" parameterType="com.gdu.board.vo.Board">
		INSERT INTO board(
			board_category, 
			board_title, 
			board_content, 
			member_id, 
			board_date, 
			update_date
		) VALUES (
			#{boardCategory}, 
			#{boardTitle}, 
			#{boardContent}, 
			#{memberId}, 
			NOW(), 
			NOW()
		)
	</insert>

	<!-- Board의 객체를 온전히 담기위한 Map -->
	<resultMap type="com.gdu.board.vo.Board" id="resultBoard">
		<id column="board_no" property="boardNo"/>	<!-- 중복시 에러 발생 -->
		<result column="board_category" property="boardCategory"/>
		<result column="board_title" property="boardTitle"/>
		<result column="board_content" property="boardContent"/>
		<result column="member_id" property="memberId"/>
		<result column="board_date" property="boardDate"/>
		<result column="update_date" property="updateDate"/>
		<collection property="comments" ofType="com.gdu.board.vo.Comment">
			<id column="comment_no" property="commentNo"/>
			<result column="comment_content" property="commentContent"/>
		</collection>
	</resultMap>
	
	<!-- 하나의 Board와 해당되는 Comment들 -->
	<select id="selectBoardOneAndComments" parameterType="int" resultMap="resultBoard">
		SELECT 
			b.board_no, 
			b.board_category, 
			b.board_title, 
			b.board_content, 
			b.member_id, 
			b.board_date, 
			b.udate_date, 
			c.comment_no, 
			c.comment_content
		FROM board b LEFT JOIN comment c
		ON b.board_no = c.board_no
		WHERE b.board_no = #{boardNo}
	</select>
	
	<!-- 카테고리에 따른 Board의 목록 -->
	<select id="selectBoardListByCategory" parameterType="Map" resultMap="resultBoard">
		SELECT 
			board_no, 
			board_category, 
			board_title, 
			member_id, 
			board_date
		FROM board
		<where>
			<if test="boardCategory != null">
				board_category = #{boardCategory}
			</if>
		</where>
		ORDER BY board_date DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 카테고리에 따른 Board의 총 갯수 -->
	<select id="selectBoardTotalCount"  parameterType="String" resultType="int">
		SELECT COUNT(*) 
		FROM board
		<where>
			<if test="boardCategory != null">
				board_category = #{boardCategory}
			</if>
		</where>
	</select>
</mapper>